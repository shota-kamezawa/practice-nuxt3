name: Install Node.js dependencies

on:
  workflow_call:
    inputs:
      node-modules-path:
        description: A path for node_modules directory.
        type: string
        required: false
        default: node_modules
      node-env:
        description: NODE_ENV
        type: string
        required: true
    outputs:
      node-modules-cache-key:
        description: A value to pass to 'key' of actions/cache.
        value: ${{ jobs.install.outputs.node-modules-cache-key }}
      node-modules-path:
        description: A value to pass to 'path' of actions/cache.
        value: ${{ inputs.node-modules-path }}
      node-version:
        description: Same as 'node-version' of actions/setup-node.
        value: ${{ jobs.install.outputs.node-version }}

env:
  NODE_ENV: ${{ inputs.node-env }}

defaults:
  run:
    shell: bash

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      node-modules-cache-key: ${{ steps.cache-key.outputs.value }}
      node-version: ${{ steps.setup-node.outputs.node-version }}
    steps:
      - uses: actions/checkout@v4

      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions

      - id: cache-restore-key
        name: Define restore key
        run: |
          NODE_MAJOR=$(echo $NODE_VERSION | cut -f 1 -d .)
          echo "value=node-modules-${NODE_MAJOR}-${NODE_ENV}-" >> $GITHUB_OUTPUT
        env:
          NODE_VERSION: ${{ steps.setup-node.outputs.node-version }}

      - id: cache-key
        name: Define cache key
        run: echo "value=${RESTORE_KEY}${IDENTIFIER}" >> $GITHUB_OUTPUT
        env:
          IDENTIFIER: ${{ hashFiles('yarn.lock') }}
          RESTORE_KEY: ${{ steps.cache-restore-key.outputs.value }}

      - uses: actions/cache@v3
        with:
          key: ${{ steps.cache-key.outputs.value }}
          path: ${{ inputs.node-modules-path }}
          restore-keys: ${{ steps.cache-restore-key.outputs.value }}

      - run: yarn install --frozen-lockfile
